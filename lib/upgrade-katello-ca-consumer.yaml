#
# Upgrade katello-ca-consumer RPM to latest release
#
# Author: Trond
#
- hosts: "{{ myhosts }}"
  gather_facts: False

  vars:
    latest: 20

  pre_tasks:
    - name: gather packages
      ansible.builtin.package_facts:

#    - debug:
#        var: ansible_facts['packages']['katello-ca-consumer-rhsat-prod01.uio.no']

    - name: check for proxy.sh
      stat:
        path: /root/proxy.sh
      register: _check_proxy_sh

    - block:
        - name: get proxy settings
          slurp:
            path: /root/proxy.sh
          register: _proxy_sh

        # In with_items we decode, trim, split, and filter (`select`) the slurped contents of proxy.sh
        # down to a list of lines matching the regular expression `proxy_line` defined in the `vars:` section
        # We add (`combine`) the lines to the `proxy_env` dict as a `{key: value}` by
        # stripping the line (item) down to a key (\\1) and value (\\2) with the `regex_replace` function using `proxy_line`

        - name: create proxy_env fact
          set_fact:
            proxy_env: "{{ proxy_env | default({}) |
              combine( { item | regex_replace(proxy_line, '\\1') : item | regex_replace(proxy_line, '\\2') } ) }}"
          with_items: "{{ (_proxy_sh.content | b64decode | trim).split('\n') | select('match', proxy_line) | list }}"
          vars:
            proxy_line: 'export (https?_proxy)=(.*)'
      when: _check_proxy_sh.stat.exists == true

#    - debug:
#        msg: "{{ proxy_env }}"

  tasks:
    - name: bug in katello package requires removing, then installing
      block:
        - name: Remove katello-ca-consumer
          yum:
            name: katello-ca-consumer-rhsat-prod01.uio.no
            state: absent

        - name: Install latest katello-ca-consumer
          yum:
            name: https://rhsat-prod01.uio.no/pub/katello-ca-consumer-latest.noarch.rpm
            state: present
          environment: "{{ proxy_env | default({}) }}"
      when:
        - ansible_facts['packages']['katello-ca-consumer-rhsat-prod01.uio.no'] is defined
        - ansible_facts['packages']['katello-ca-consumer-rhsat-prod01.uio.no'][0]['release'] is version(latest, '<')
