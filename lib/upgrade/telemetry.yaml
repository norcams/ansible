#
# This can be used to upgrade telemetry to new version of openstack
#
# Before you start you need to stop puppet and deploy latest version of himlar.
#
# Mandatory input variables:
# * myhosts (str): ansible node(s)
#
# Example:
# sudo ansible-playbook -e "myhosts=test02-telemetry-01 himlar_puppet_env=wallaby" lib/upgrade/telemetry.yaml
#
# Last verified: 2018-07-18 (ansible version 2.4.2.0)
#
# Run this to purge epel packages
#- import_playbook: ../remove_epel_packages.yaml
- hosts: "{{ myhosts }}"
  gather_facts: no
  tasks:
    - name: 'Repo files'
      command: 'ls -1 /etc/yum.repos.d/'
      register: repo_files
    - name: 'Remove all old yum repos'
      file: name="/etc/yum.repos.d/{{item}}" state=absent
      with_items: "{{repo_files.stdout_lines | default([])}}"
    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        runmode: 'kickstart'
    - name: 'Stop ceilometer notification service'
      systemd: name=openstack-ceilometer-notification.service state=stopped
      when: '"telemetry" in inventory_hostname'
    - name: 'Stop ceilometer polling service'
      systemd: name=openstack-ceilometer-polling.service state=stopped
    - name: Purge old package
      yum: name=openstack-ceilometer-common state=absent
      with_items:
        - openstack-ceilometer*
        - python-ceilometer
    - name: 'Remove /etc/ceilometer'
      file: name=/etc/ceilometer state=absent
    - name: 'Yum update'
      yum: name=* state=latest update_cache=yes
      when: '"telemetry" in inventory_hostname'
    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"
        puppet_ignore_errors: no
    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"
        puppet_ignore_errors: no
    - name: 'Restart ceilometer polling service'
      systemd: name=openstack-ceilometer-polling.service state=restarted
    - name: 'Restart ceilometer notification service'
      systemd: name=openstack-ceilometer-notification.service state=restarted
      when: '"telemetry" in inventory_hostname'
