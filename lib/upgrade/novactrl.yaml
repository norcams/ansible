# This will try to upgrade novactrl without downtime
#
# Example:
# ansible-playbook -e location=test01 lib/upgrade/nova.yaml
#
# Vagrant example:
# ansible-playbook -K -e "location=vagrant himlar_puppet_env=xena"  lib/upgrade/novactrl.yaml
#
# In vagrant also run this first:
# vagrant rsync novactrl
#
# Variables:
#   location:           name of location (mandatory)
#   himlar_puppet_env:  name of new puppet environment (mandatory)
#
# Last verified: 2024-05-27 (ansible version 2.14.14)
#

# Stop puppet on all novactrl nodes
- import_playbook: ../toggle_puppet.yaml
  vars:
    myhosts:  "{{ location }}-novactrl"
    action:   disable
  when: location != 'vagrant'

# Upgrade novactrl-0x
- hosts: "{{ location }}-novactrl"
  gather_facts: false
  tasks:
    - name: 'Stop crond to avoid puppet run'
      systemd:
        name: crond
        state: stopped

    - name: 'Repo files'
      command: 'ls -1 /etc/yum.repos.d/'
      register: repo_files

    - name: 'Remove all old yum repos'
      file: name="/etc/yum.repos.d/{{item}}" state=absent
      with_items: "{{repo_files.stdout_lines | default([])}}"

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        runmode: 'kickstart'
        puppet_ignore_errors: no

    - name: 'Stop httpd for nova API service'
      systemd: name=httpd state=stopped
      ignore_errors: yes

    - name: 'Stop nova scheduler service'
      systemd: name=openstack-nova-scheduler state=stopped
      ignore_errors: yes

    - name: 'Stop nova conductor service'
      systemd: name=openstack-nova-conductor state=stopped
      ignore_errors: yes

    - name: 'Purge old package'
      dnf:
        name:
          - python3-nova
          - python3-novaclient
          - openstack-nova-api
          - openstack-nova-common
          - openstack-nova-scheduler
        state: absent

    - name: 'Purge old package'
      dnf:
        name:
          - python3-placement
          - openstack-placement-common
          - openstack-placement-api
        state: absent

#    - name: 'Clear problematic packages'
#      dnf:
#        name:
#        - openvswitch
#        - network-scripts-openvswitch
#        - rdo-network-scripts-openvswitch
#        state: absent

    - name: 'Autoremove unneeded packages installed as dependencies'
      dnf:
        autoremove: yes

    - name: 'Remove /etc/nova/'
      file: name=/etc/nova state=absent

    - name: 'Remove /etc/placement/'
      file: name=/etc/placement state=absent

    - name: 'Updated the reset of RDO packages'
      dnf:
        name: "*"
        state: latest
        update_cache: true

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"
        puppet_ignore_errors: no

# These are done by the nova puppet module
#    - name: "api db sync"
#      when: '"novactrl" in inventory_hostname'
#      command: "nova-manage api_db sync"

#    - name: "db sync"
#      when: '"novactrl" in inventory_hostname'
#      command: "nova-manage db sync"

#    - name: "db cell_v2 simple_cell_setup"
#      when: '"novactrl" in inventory_hostname'
#      command: "nova-manage cell_v2 simple_cell_setup"
#      ignore_errors: yes

#    - name: "db online_data_migrations"
#      when: '"novactrl" in inventory_hostname'
#      command: "nova-manage db online_data_migrations"

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"
        puppet_ignore_errors: no

    - name: 'Stop crond to avoid puppet run'
      systemd:
        name: crond
        state: started
