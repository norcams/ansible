---
# This can be used to upgrade storage nodes to new version of ceph
# and execute OSD bluestore repair script before reboot
#
# Before you start you need to stop puppet and
#
# *** ALL CEPHMONs MUST BE UPGRADED BEFORE STORAGE ***
#
# Mandatory input variables:
# * myhosts (str): ansible node(s)
#
# After upgrading node, the storage node will reboot.
#
# Example:
# sudo ansible-playbook -e "myhosts=test01-storage" lib/upgrade/ceph_storage_bluerepair.yaml
#
# to update DELL-firmware set run_fw_upg=true, used on DELL metall
#
# sudo ansible-playbook -e "myhosts=test01-storage run_fw_upg=true" lib/upgrade/ceph_storage_bluerepair.yaml
#
# Last verified: 2022-08-17 (ansible version 2.9.27)
#

- hosts: "{{ myhosts }}"
  serial: 1
  gather_facts: false
  tasks:

    - name: waiting for clean pgs...
      command: "ceph pg stat --format json"
      register: ceph_pg_stat
      until: >
        (((ceph_pg_stat.stdout | from_json).pg_summary.num_pg_by_state | length) > 0)
        and
        (((ceph_pg_stat.stdout | from_json).pg_summary.num_pg_by_state | selectattr('name', 'search', '^active\\+clean') | map(attribute='num') | list | sum) == (ceph_pg_stat.stdout | from_json).pg_summary.num_pgs)
      changed_when: false
      retries: 900 # default from ceph-ansible project is 600
      delay: 3 # default from ceph-ansible project is 2

    - name: Set OSD noout flag
      command: "ceph osd set noout"
      ignore_errors: yes

    - name: stopp osd services
      service:
        name: ceph-osd.target
        state: stopped

    - name: upgrade DELL-firmware
      when: run_fw_upg | default(false) | bool
      block:
        - name: Run dsu in non-interactive mode
          command: /sbin/dsu --non-interactive
          ignore_errors: yes
          when: "'compute' not in inventory_hostname"

    - name: Get repo files
      command: "ls -1 /etc/yum.repos.d/"
      register: repo_files

    - name: Remove all old yum repos
      file: name="/etc/yum.repos.d/{{item}}" state=absent
      with_items: "{{repo_files.stdout_lines | default([])}}"

    - name: Enable puppet
      command: "/opt/puppetlabs/bin/puppet agent --enable"

    - name: Run puppet kickstart runmode
      command: "/opt/puppetlabs/bin/puppet agent --onetime --no-daemonize"
      environment:
        FACTER_RUNMODE: kickstart
      ignore_errors: yes

    - name: Disable puppet
      command: "/opt/puppetlabs/bin/puppet agent --disable"

    - name: Update all packages
      yum: name=* state=latest update_cache=yes

    - name: Transfer OSD bluestore repair script
      copy: src={{ playbook_dir }}/../../files/scripts/repair_bluestore.sh dest=/root/repair_bluestore.sh mode=0777

    - name: Execute OSD bluestore repair script
      command: sh /root/repair_bluestore.sh

    - name: Reboot host
      command: shutdown -r 1 "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true

    - name: waiting for server to come back
      local_action: wait_for port=22 host={{ inventory_hostname }} timeout=1800 delay=75 state=present
