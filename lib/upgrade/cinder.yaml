#
# This can be used to upgrade volume to new version of openstack
#
# Before you start you need to deploy latest version of himlar.
#
# Mandatory input variables:
# * location (str): vagrant, test01 ...
#
# Example:
# sudo ansible-playbook -e "location=test01" lib/upgrade/volume.yaml
#
# Last verified: never (ansible version 2.x)
#
# https://docs.openstack.org/cinder/wallaby/upgrade.html

- name: stop puppet on all volume-nodes
  import_playbook: ../toggle_puppet.yaml
  vars:
    myhosts: "{{ location }}-volume"
    action: disable
  when: location != 'vagrant'

- name: upgrade volume
  hosts: "{{ location }}-volume"
  gather_facts: false 

  tasks:
  
    - name: 'Register repo files'
      ansible.builtin.command: 'ls -1 /etc/yum.repos.d/'
      register: repo_files

    - name: 'Remove all old yum repo-files'
      ansible.builtin.file:
        name: "/etc/yum.repos.d/{{item}}"
        state: absent
      with_items: "{{repo_files.stdout_lines | default([])}}"

    - name: 'Run kickstart'
      ansible.builtin.import_tasks: ../tasks/puppetrun.yaml
      vars:
        runmode: 'kickstart'
        puppet_ignore_errors: no

    - name: 'Stop httpd'
      ansible.builtin.systemd:
        name: httpd
        state: stopped

    # Assumed service upgrade order is cinder-scheduler, cinder-volume, N/A:backup and finally cinder-api
    - name: 'Stop cinder scheduler service'
      ansible.builtin.systemd:
        name: openstack-cinder-scheduler
        state: stopped
      ignore_errors: yes

    - name: 'Stop cinder volume service'
      ansible.builtin.systemd:
        name: openstack-cinder-volume
        state: stopped
      ignore_errors: yes

    - name: 'Purge old package'
      ansible.builtin.dnf:
        name: openstack-cinder
        state: absent

    - name: 'Remove /etc/cinder/'
      ansible.builtin.file:
        name: /etc/cinder
        state: absent

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        runmode: 'kickstart'
        himlar_puppet_env: 'wallaby'
        himlar_deployment: 'redeploy'
        puppet_ignore_errors: no

    - name: 'dnf update'
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: yes

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: 'wallaby'
        himlar_deployment: 'redeploy'
        puppet_ignore_errors: no

- name: restart volume api
  hosts: "{{ location }}-volume"
  gather_facts: no
  tasks:
    - name: 'Restart httpd'
      systemd:
        name: httpd
        state: restarted
