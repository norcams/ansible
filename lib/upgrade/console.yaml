# Example:
# sudo ansible-playbook -e "myhosts=test01-console-01 himlar_puppet_env=yoga" lib/upgrade/console.yaml
#
# Last verified: 2024-05-27 (ansible version 2.14.14)
#
# Upgrade console-0x

- hosts: "{{ myhosts }}"
  gather_facts: false

  vars:
    config_dir: '/etc/nova'

  tasks:

    - name: Check if "{{ config_dir }}_pre_{{ himlar_puppet_env }}" exists
      ansible.builtin.stat:
        path: "{{ config_dir }}_pre_{{ himlar_puppet_env }}"
      register: check_config_backup

    - name: "Backup {{ config_dir }} to {{ config_dir }}_pre_{{ himlar_puppet_env }}"
      ansible.builtin.command: "cp -a {{ config_dir }} {{ config_dir }}_pre_{{ himlar_puppet_env }}"
      when: check_config_backup.stat.exists == False

    - systemd: name=crond state=stopped
    - name: 'Repo files'
      command: 'ls -1 /etc/yum.repos.d/'
      register: repo_files

    - name: 'Remove all old yum repos'
      file: name="/etc/yum.repos.d/{{item}}" state=absent
      with_items: "{{repo_files.stdout_lines | default([])}}"

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        runmode: 'kickstart'

    - name: 'Stop nova novaproxy service'
      systemd: name=openstack-nova-novncproxy state=stopped
      ignore_errors: yes

    - name: Purge old package
      yum: name=openstack-nova-common state=absent

    - name: 'Remove /etc/nova/'
      file: name=/etc/nova state=absent

# Probably not necessary any more
#    - name: 'Clear problematic packages'
#      package:
#        name:
#        - openvswitch
#        - network-scripts-openvswitch
#        - rdo-network-scripts-openvswitch
#        state: absent

    - name: 'Yum update'
      yum: name=* state=latest update_cache=yes

    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"
    - import_tasks: ../tasks/puppetrun.yaml
      vars:
        himlar_puppet_env: "{{ himlar_puppet_env }}"

    - name: 'Start crond again'
      systemd:
        name: crond
        state: started
